#!/usr/bin/env node

var program = require('commander');
var exporter = require('..');
var EventEmitter = require('events').EventEmitter;
var PublicKey = require('bitcore-lib').PublicKey;
var PublicKeyBCH = require('bitcore-lib-cash').PublicKey;

program
  .version('0.1.0', '-v, --version')
  .description('Emit a JSONL stream of wallet keys.')
  .option('-t, --testnet', 'interpret as a testnet wallet')
  .option('-r --regtest', 'interpret as a regtest address')
  .option('-f, --file <wallet-file>', 'a BerkeleyDB wallet.dat file')
  .option('-b, --bch', 'if wallet.dat is from ABC')
  .parse(process.argv);

var network = program.testnet ? 'testnet' : program.regtest ? 'regtest' : 'livenet';
if (!program.file) {
  program.help();
}

function processOutput(json) {
  var obj = JSON.parse(json);
  if (obj.pubKey) {
    var pk;
    if (program.bch) {
      pk = new PublicKey(obj.pubKey);
      obj.address = pk.toAddress(network).toString();
    } else {
      pk = new PublicKey(obj.pubKey);
      obj.address = pk.toAddress(network).toString();
    }
  }
  console.log(JSON.stringify(obj));
}

function main() {
  var emitter = new EventEmitter();
  exporter.stream({
    filePath: program.file,
    emitter: emitter
  });
  emitter.on('data', processOutput);
  exporter.start();
  wstream.end();
}

main();
